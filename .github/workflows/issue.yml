name: Snyk Security Scan and Issue Creation

on:
  push:
    branches:
      - main

permissions:
  actions: write
  issues: write  # Allows creation of issues
  security-events: write

jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: code test
          args: "--json-file-output=path/snyk_results.json"

      - name: Check if snyk_results.json exists
        run: |
          ls -la path/  # List files to check if snyk_results.json exists
          cat path/snyk_results.json  # Display the contents of the snyk_results.json

      - name: Parse vulnerabilities and create issues
        id: create-issues
        run: |
          if [ -f path/snyk_results.json ]; then
            # Extract vulnerabilities from the JSON results using jq
            VULNERABILITIES=$(jq -r '.vulnerabilities[] | "\(.package.name) (\(.severity)) - \(.title)"' path/snyk_results.json)
            
            if [ -n "$VULNERABILITIES" ]; then
              echo "Vulnerabilities found! Creating issues..."
              
              # Loop through each vulnerability and create an issue for it
              for vuln in $VULNERABILITIES; do
                ISSUE_TITLE="Snyk Vulnerability: $vuln"
                ISSUE_BODY="Snyk has detected the following vulnerability in your code:\n\n$vuln\n\nPlease review and fix the issue."

                # Create GitHub issues for each vulnerability
                curl -X POST -H "Authorization: token ${{ secrets.GH_PAT }}" \
                  -d "{\"title\":\"$ISSUE_TITLE\", \"body\":\"$ISSUE_BODY\", \"labels\":[\"security\"]}" \
                  https://api.github.com/repos/${{ github.repository }}/issues
              done
            else
              echo "No vulnerabilities found."
            fi
          else
            echo "Snyk results file not found."
          fi
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
