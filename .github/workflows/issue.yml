name: Create GitHub Issues from SARIF Report

on:
  push:
    branches:
      - main

permissions:
  actions: write
  issues: write  # Required to create issues

jobs:
  create-issues:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Upload SARIF report to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: path/to/your/sarif-file.sarif
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Issues from SARIF
        run: |
          # Parse SARIF and extract issues
          issues=$(cat path/to/your/sarif-file.sarif | jq -r '.runs[0].results[] | "\(.message.text) - File: \(.locations[0].physicalLocation.artifactLocation.uri) Line: \(.locations[0].physicalLocation.region.startLine)"')
          
          # If no issues found, exit early
          if [ -z "$issues" ]; then
            echo "No issues found in SARIF report"
            exit 0
          fi

          # Iterate through the issues and create GitHub issues
          for issue in $issues; do
            title=$(echo "$issue" | cut -d'-' -f1)
            file_and_line=$(echo "$issue" | cut -d'-' -f2)

            echo "Creating issue: $title"

            curl -X POST \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -d "{\"title\": \"Security Issue: $title\", \"body\": \"Description: This issue was detected by SARIF scan. Please review. Location: $file_and_line.\", \"labels\": [\"security\", \"vulnerability\"]}" \
              "https://api.github.com/repos/${{ github.repository }}/issues" \
              -w "\nResponse code: %{http_code}\n"
          done
