name: Simple Code Issue Detection and GitHub Issue Creation

on:
  push:
    branches:
      - main

permissions:
  issues: write  # Grant permission to create issues

jobs:
  code-issues:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Python
        run: |
          python -m ensurepip --upgrade
          python -m pip install --upgrade pip

      - name: Scan Python files for common issues (example:undefined variables)
        run: |
          # Basic script to catch simple issues like undefined variables or unused imports
          echo "Scanning Python files for issues..."
          
          issues=""
          
          # Simple check for undefined variables or unused imports using Python's `py_compile` (will catch syntax errors)
          for file in $(find . -name "*.py"); do
            python -m py_compile "$file" 2>&1
            if [ $? -ne 0 ]; then
              issues="$issues\nSyntax error in $file"
            fi
          done

          # If any issues are found, write them to the issues variable
          if [ -n "$issues" ]; then
            echo "$issues"
          else
            echo "No issues found"
          fi
          
          # Save issues to a file if any
          echo "$issues" > issues.txt

      - name: Create GitHub Issues for Detected Problems
        if: success() && steps.scan.outputs.issues != ''
        run: |
          issues=$(cat issues.txt)
          if [ -z "$issues" ]; then
            echo "No issues detected."
            exit 0
          fi

          # Iterate through the issues and create GitHub issues
          for issue in $(echo "$issues" | tr '\n' ' '); do
            echo "Creating issue: $issue"
            curl -X POST \
              -H "Authorization: token ${{ secrets.GH_PAT }}" \  # Use your GitHub Personal Access Token here
              -d "{\"title\": \"Code Issue: $issue\", \"body\": \"Description: This issue was detected by a static analysis tool. Please review.\", \"labels\": [\"code\", \"linting\"]}" \
              "https://api.github.com/repos/${{ github.repository }}/issues" \
              -w "\nResponse code: %{http_code}\n"
          done
