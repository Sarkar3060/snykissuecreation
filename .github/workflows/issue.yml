name: Snyk Vulnerability Issue Creation

on:
  push:
    branches:
      - main  # Trigger on push to the main branch

jobs:
  create-issue:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Snyk CLI
        run: |
          curl -sL https://github.com/snyk/snyk/releases/download/v1.100.0/snyk-linux-amd64-1.100.0.tar.gz | tar -xz
          mv snyk /usr/local/bin

      - name: Run Snyk to get results
        run: |
          snyk test --all-projects --json > snyk.sarif

      - name: Generate issue body and create GitHub issue
        run: |
          # Initialize issue body with a heading
          issue_body="### Vulnerability Details:\n\n"

          # Loop through all vulnerabilities and extract relevant information
          for i in $(seq 0 $(($RESULTS_LENGTH - 1))); do
            vulnerability_title=$(jq -r ".runs[0].results[$i].message.text" snyk.sarif)
            vulnerability_severity=$(jq -r ".runs[0].results[$i].level" snyk.sarif)
            vulnerability_url=$(jq -r ".runs[0].results[$i].links[0].uri" snyk.sarif)
            vulnerability_location=$(jq -r ".runs[0].results[$i].locations[0].physicalLocation.artifactLocation.uri" snyk.sarif)
            
            # Add details for each vulnerability
            issue_body+="**Title**: $vulnerability_title\n"
            issue_body+="**Severity**: $vulnerability_severity\n"
            issue_body+="**Description**: [More details]($vulnerability_url)\n"
            issue_body+="**File/Location**: $vulnerability_location\n\n"
            
            # Additional sections for remediation, impact, and actions
            issue_body+="### How to Fix:\n[Refer to Snyk's fix or mitigation guide]\n\n"
            issue_body+="### Impact:\n[Explain the potential impact of the vulnerability]\n\n"
            issue_body+="### Action Required:\nPlease review and address this vulnerability.\n\n"
          done
          
          # Now, attempt to create an issue via GitHub API and handle "Bad credentials" error
          response=$(curl -X POST \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            -d '{"title":"Snyk Vulnerability Found: '"$vulnerability_severity $vulnerability_title"'","body":"'"$issue_body"'","labels":["vulnerability","bug"]}' \
            https://api.github.com/repos/${{ github.repository }}/issues 2>&1)
          
          # Check if the response contains "Bad credentials" and handle accordingly
          if [[ "$response" == *"Bad credentials"* ]]; then
            error_message="Authentication failed: Bad credentials."
            issue_body="### Authentication Error:\n$error_message\n\n$response"
            curl -X POST \
              -H "Authorization: token $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              -d '{"title":"Authentication Failed: Bad credentials","body":"'"$issue_body"'","labels":["bug","authentication"]}' \
              https://api.github.com/repos/${{ github.repository }}/issues
          fi
          
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RESULTS_LENGTH: 2  # Adjust this based on your results
